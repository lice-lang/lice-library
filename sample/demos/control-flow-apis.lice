
; (load-file "sample/demos/control-flow-apis.lice")

(def get-max a b (|>
  (print "the bigger one is:")
  (if (> a b) a b)))

(def print-range from to
  (while (< from to)
         (|> (println from)
             (-> from (+ 1 from)))))

(def judge-score score (when
  (>= score 100), "full score! congratulations!"
  (>= score 90), "nice job!"
  (>= score 80), "come on! you can do it!"
  (>= score 70), "please study hard!"
  (>= score 60), "fortunately, you passed."
  (>= score 0 ), "you die!"
  "WTF! you must be kidding."))



(get-max 10 23)
(get-max 10 -1)

(print-range 27 33)

(judge-score 100)
(judge-score 95)
(judge-score 87)
(judge-score 73)
(judge-score 66)
(judge-score 60)
(judge-score 21)
(judge-score 1)
(judge-score -1)

; output
;
; null => java.lang.Object
; null => java.lang.Object
; null => java.lang.Object
; the bigger one is:23 => java.lang.Integer
; the bigger one is:10 => java.lang.Integer
; 27
; 28
; 29
; 30
; 31
; 32
; 33 => java.lang.Integer
; full score! congratulations! => java.lang.String
; nice job! => java.lang.String
; come on! you can do it! => java.lang.String
; please study hard! => java.lang.String
; fortunately, you passed. => java.lang.String
; fortunately, you passed. => java.lang.String
; you die! => java.lang.String
; you die! => java.lang.String
; WTF! you must be kidding. => java.lang.String
; null => java.lang.Object
